@model PoochPositiveTraining.Models.Client

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <h4>Client: @Model.Name</h4>
        <div class="form-group row">
            <div class="col-md-offset-1 col-md-10">
                <button type="button" onclick="location.href='@Url.Action("Index", "Clients")'" class="btn btn-default">
                    <span class="glyphicon glyphicon-arrow-left"></span>
                    Back
                </button>
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ClientID)

    </div>

    <div class="row">
        <div class="col-md-8">
            
            <div class="form-group row">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Street1, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Street1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Street1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Street2, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Street2, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="col-md-4">
            <div class="form-group row">
                @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Note, 10, 40, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
