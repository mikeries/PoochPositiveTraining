@model PoochPositiveTraining.Models.Dog

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-12">
            <button type="button" onclick="location.href='@Url.Action("Details", "Clients", new { id = ViewBag.Owner })'" class="btn btn-default">
                <span class="glyphicon glyphicon-arrow-left"></span>
                Back
            </button>
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
        <hr />
    </div>

    <div class="row">
        <div class="form-horizontal col-md-4">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Breed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Breed, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Breed, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ClientID, "Owner", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ClientID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <div class="form-group row">
                @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Comments, 10, 40, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        
    </div>

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
